Interface:
	Obtener informacion .net:	J:\Angular\neilcummings>dotnet --info
	Requerido para el proyecto: .NetCore 8.
	
	Tipos de proyecto (segun templates) disponibles en el sistema:
	J:\Angular\neilcummings>dotnet new list
	
	
	
	Creacion de la solucion: 
		J:\Angular\neilcummings\datingApp>dotnet new sln
	Creacion de la webApi:
		J:\Angular\neilcummings\datingApp>dotnet new webapi -controllers -n api
		The template "ASP.NET Core Web API" was created successfully.
	Agregar la webApi a la solucion
		J:\Angular\neilcummings\datingApp>dotnet sln add api
		Project `api\api.csproj` added to the solution.
		J:\Angular\neilcummings\datingApp>dotnet sln list
		Project(s)
		----------
		api\api.csproj
		
	Abrir proyecto:
		J:\Angular\neilcummings\datingApp>code .
		
		
	Pluggins:
		Instalar c#, .Net Install Tool, Nugget Gallery, c# dev Kit, SQLite
		

	Ejecutar proyecto desde la terminal de VBCode:
		PS J:\Angular\neilcummings\datingApp\api> dotnet run
		Testear api: 	http://localhost:5168/WeatherForecast
						http://localhost:5168/swagger/
	


Entity Framework
----------------
    Una vez instalado el nugget gallery, en la terminal se crea un nuevo panel: NUGET
    instalar: 
		Microsoft.EntityFrameworkCore.sqlite 8.04
		Microsoft.EntityFrameworkCore.Design 8.04
		se puede instalar con ctrl+p y nuget: open nuget gallery (no funciono esta opcion)


	Agregar DBContext: api\Data\DataContext.cs
	Al manejar un contexto de datos, se debe configurar el archivo Program.cs para la inyeccion de dependencia
	configurar cadena de conexion en appsettings.Development.json

	Herramienta Nuget
		para instalar las herramientas de Entity Framework Core .NET Command-line Tools 8.0.4
		Ir a https://www.nuget.org y buscar el paquete dotnet-ef
		buscar la version correspondiente al netFramework y demas e instalar: 
		PS J:\Angular\neilcummings\datingApp\api> dotnet tool install --global dotnet-ef --version 8.0.4

		ejecutar la migracion:
		PS J:\Angular\neilcummings\datingApp\api> dotnet ef migrations add InitialCreate -o Data/Migrations
		Build started...
		Build succeeded.
		Done. To undo this action, use 'ef migrations remove'
		PS J:\Angular\neilcummings\datingApp\api> 

		Esto generara archivos de migraciones en el folder: api\Data\Migrations
		estos archivos contienen toda la logica para la creacion de la base de datos
		info de la base: PS J:\Angular\neilcummings\datingApp\api> dotnet ef database -h

		Actualizar la db:
		conforme a lo creado en el comando anterior, se procede a actualizar(construir la db)
		PS J:\Angular\neilcummings\datingApp\api> dotnet ef database update
		se creara el archivo: api\dating.db

		sqlite Extension:
		ctrl+p
		> sqlite: open database
		elegir la db creada, y se abrira en el menu de la izquierda el sqlite EXplorer
		insertar datos por sql query


Controller
----------
	agregar: api\Controllers\UsersController.cs
	Marcar la inyeccion de dependencia
	generar metodos de consulta

ejecucion:
	se puede hacer una ejecucion para ir realizando modificaciones y se registren sin dar de baja la aplicacion
	PS J:\Angular\neilcummings\datingApp\api> dotnet watch



habilitacion de CORS
--------------------
	Realizarlo en Program.cs
	Observacion en este proyecto es diferente de lo habitual, al parecer existe un error en algunos angular Development environments


GitHub
------	
	Crear repositorio: https://github.com/angelnemo/DattingApp
	PS J:\Angular\neilcummings\datingApp\api> git status
	fatal: not a git repository (or any of the parent directories): .git
	PS J:\Angular\neilcummings\datingApp\api> git init
	Initialized empty Git repository in J:/Angular/neilcummings/datingApp/api/.git/
	PS J:\Angular\neilcummings\datingApp\api> dotnet new gitignore
	The template "dotnet gitignore file" was created successfully.
	click derecho sobre appsettings.json y add to gitignore (si es que funca, sino para ver otra opcion luego)

	
	PS J:\Angular\neilcummings\datingApp\api> git remote add origin https://github.com/angelnemo/DattingApp.git
	en el panel izquierdo ir a la seccion de git, y junto al boton darle al + "stage all changes"
	en el mensaje colocar cualquier vaina y commit y publish branch
	de esta manera quedara publicado el repositorio 





**************************  ANGULAR **************************

Verificar la compatibilidad entre el nodejs isntalado y la version de angualr: https://angular.dev/reference/versions
C:\Users\mccel>node --version
v20.14.0


C:\Users\mccel>ng version
     _                      _                 ____ _     ___
    / \   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|
   / △ \ | '_ \ / _` | | | | |/ _` | '__|   | |   | |    | |
  / ___ \| | | | (_| | |_| | | (_| | |      | |___| |___ | |
 /_/   \_\_| |_|\__, |\__,_|_|\__,_|_|       \____|_____|___|
Angular CLI: 18.2.2
Node: 20.14.0
Package Manager: npm 10.7.0
OS: win32 x64



crear app:
	PS J:\Angular\neilcummings\datingApp> ng new client
	? Which stylesheet format would you like to use? CSS             [ https://developer.mozilla.org/docs/Web/CSS                     ]
	? Do you want to enable Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering)? no

Ejecutar: PS J:\Angular\neilcummings\datingApp\client> ng serve

Preferencias en el editor:
	Settings / buscar brackets / Auto Closing Brackets: always



HTTP REQUESTS
-------------
	Para esto se requiere tener configurado este tipo de servicio en: client\src\app\app.config.ts
	agregar: provideHttpClient() en los providers
	esto debe ser inyectado en el constructor de la componente: client\src\app\app.component.ts
	o tambien se puede utilizar inject (esto al parecer es para las nuevas versiones)


	estructura basica en un httpRequest en app.component.ts:
	this.http.get('https://localhost:5168/api/users').subscribe({
      next: () => {},
      error: () => {},
      complete: () =>{}
    })


	cuando ya se recuperen los datos, se los podra ir pintando en la componente.html
	en la seccion @component a los imports agregarle NgFor, para poder iterar los datos




Bootstrap
---------
	si no se especifica bien la version de bootstrap, esta dando problemas para angular 18
	PS J:\Angular\neilcummings\datingApp\client> npm install bootstrap@5.3.3
	configurar client\angular.json
	agregando las secciones de codigo:
   "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]
          },





MkCert
------
	Utilidad para generar los certificados ssl que pueden ser utilizados de manera local
	descargarla y en el directorio ejecutar el comando:
	D:\Angel\Downloads\03>mkcert.exe localhost
	esto generara 2 archivos: The certificate is at "./localhost.pem" and the key at "./localhost-key.pem" ✅
	segun el manual con D:\Angel\Downloads\03>mkcert.exe -install   
	deberian instalarse en el sistema
	The local CA is now installed in the system trust store! ⚡️


	Pero no se instalaron, por lo tanto se lo hace manualmente:
	se renombra de localhost a central.pem en ambos casos
	D:\Angel\Downloads\03>certutil -addstore -f "Root" D:\Angel\Downloads\03\central.pem
	Root "Trusted Root Certification Authorities"
	Certificate "CENTRAL\mccel@CENTRAL (Angel Giovanny Macancela Robles)" added to store.
	CertUtil: -addstore command completed successfully.

	Se puede ver al ejecutar mmc.exe que ya estan instalados en el repositorio de certificados de confianza
	ademas, se debe configurar para que la aplicacion (UNICAMENTE EN ENTORNO DE DESARROLLO) resuelva el sitio con el certificado
	en el archivo: client\angular.json agregar 
	"options": {
            "ssl":true,
            "sslCert": "./ssl/central.pem",
            "sslKey": "./ssl/central-key.pem"
          },
	dentro de la seccion de serve
	reinciar la app y ya resuelve segun el certificado




